{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/concreter/index.js","webpack:///./src/assets/factory/index.js","webpack:///./src/assets/handler/index.js","webpack:///./src/data/index.js","webpack:///./src/main.js","webpack:///./src/modules/app-init.js","webpack:///./src/modules/card/card-bridge.js","webpack:///./src/modules/card/container/container-concreter.js","webpack:///./src/modules/card/main/main-builder.js","webpack:///./src/modules/card/main/main-concreter.js","webpack:///./src/modules/filter/filter-builder.js","webpack:///./src/modules/filter/filter-concreter.js","webpack:///./src/modules/popup/comment/comment-builder.js","webpack:///./src/modules/popup/comment/comment-concreter.js","webpack:///./src/modules/popup/container/container-concreter.js","webpack:///./src/modules/popup/info/info-builder.js","webpack:///./src/modules/popup/info/info-concreter.js","webpack:///./src/modules/popup/rating/rating-builder.js","webpack:///./src/modules/popup/rating/rating-concreter.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAyC;;AAE1B;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,8DAAa;AACjC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP,6BAA6B,MAAM;AACnC;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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EAAC;;;;;;;;;;;;;ACfF;AAAA;AAA0C;;AAE3B;AACf,SAAS,SAAS;AAClB;AACA;;AAEA,sBAAsB,0DAAO;;AAE7B;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACXF;AAAA;AAAA;AAAA;AAAkD;AACX;;AAExB,sBAAsB,yDAAS;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,8CAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI;AAC1B,mBAAmB,IAAI;AACvB;AACA,8DAA8D,IAAI,IAAI,MAAM;AAC5E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD,6BAA6B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAkD;;AAEnC,wBAAwB,yDAAS;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B,UAAU;AACtC;;AAEA;AACA,8DAA8D,YAAY;;AAE1E;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAoC;AAIoB;;AAEzC;AACf;AACA;AACA;AACA,GAAG;;AAEH;;AAEA,mBAAmB,6EAAqB;AACxC,gBAAgB,6EAAqB;AACrC,wBAAwB,wEAAgB;AACxC,uBAAuB,0EAAkB;AACzC,sBAAsB,0EAAkB;;AAExC,mBAAmB,uDAAI;AACvB;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAkD;;AAEnC,mBAAmB,yDAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,cAAc;AAC7D;;AAEA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;;AAEA;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,iBAAiB;AAC7E;AACA;AACA;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAwC;;AAEzB;AACf,SAAS,QAAQ;;AAEjB;AACA;;AAEA,qBAAqB,yDAAM;AAC3B;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;ACZF;AAAA;AAAA;AAAkD;;AAEnC,qBAAqB,yDAAS;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wGAAwG,GAAG,eAAe,GAAG;AAC7H,mEAAmE,GAAG,IAAI,GAAG;AAC7E;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from '../factory';\n\nexport default class Component {\n  constructor() {\n    if (new.target === Component) {\n      throw new Error(`Can't instantiate BaseComponent, only concrete one.`);\n    }\n\n    this._element = null;\n    this._state = {};\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get template() {\n    throw new Error(`You have to define template.`);\n  }\n\n  render() {\n    this._element = createElement(this.template);\n    this.bind();\n    return this._element;\n  }\n\n  bind() {}\n\n  unbind() {}\n\n  unrender() {\n    this.unbind();\n    this._element.remove();\n    this._element = null;\n  }\n}\n","export const manufacture = (data, container, ...callbacks) => {\n  const callBacksArray = [];\n\n  while (callbacks.length) {\n    const callback = callbacks.shift();\n\n    callBacksArray.push(callback(data, container));\n  }\n\n  return callBacksArray;\n};\n\nexport const update = (data, ...callbacks) => {\n  while (callbacks.length) {\n    const callback = callbacks.shift();\n\n    if (callback[update]) {\n      callback.update(data);\n    }\n  }\n};\n\nexport const createElement = (template) => {\n  const elementContainer = document.createElement(`div`);\n  const templateContainer = document.createElement(`template`);\n  templateContainer.innerHTML = template;\n\n  elementContainer.appendChild(templateContainer.content);\n\n  return elementContainer.firstElementChild;\n};\n","export const getRandomIntInclusive = (min, max) => {\n  const minCeil = Math.ceil(min);\n  const maxFloor = Math.floor(max);\n\n  return Math.floor(Math.random() * (maxFloor - minCeil + 1)) + minCeil;\n};\n\nexport const getRandomArrayElement = (array) => {\n  return array[getRandomIntInclusive(0, array.length - 1)];\n};\n\nexport const generateRandomText = (array, delimeter) => {\n  const clonedArray = [...array];\n\n  const randomIndex = getRandomIntInclusive(0, clonedArray.length - 1);\n  const randomDeleteCount = getRandomIntInclusive(1, 3);\n\n  return clonedArray.splice(randomIndex, randomDeleteCount).join(delimeter);\n};\n\nexport const getAverageRating = (array) => {\n  const clonedArray = [...array];\n\n  const sum = clonedArray.reduce((acc, index) => acc + index);\n  return (sum / clonedArray.length).toFixed(1);\n};\n\nexport const getHoursMinutes = (seconds) => {\n  return new Date(\n      seconds * 1000 - 1000 * 60 * 60 * 3)\n      .toLocaleString().replace(/:/g, ' ').substring(15);\n};\n\nexport const getYear = (timestamp) => {\n  return new Date(timestamp).getFullYear();\n};\n\nexport const getImagePath = (image) => {\n  return `./images/posters/${image}`;\n};\n","const titles = [\n  `Usual Suspects`, `Scarface`, `Fight Club`, `Tokyo Story`,\n  `We Need to Talk About Kevin`, `Suspiria`, `Hannibal`, `Devil's Advocate`,\n  `Green Mile`, `Catch Me if You Can`, `Shutter Island`, `The Godfather`,\n  `My Own Private Idaho`, `Shawshank Redemption`, `Ichi the Killer`\n];\n\nconst releaseTimestamps = [\n  1483390800000, -157604400000, 505083600000, 915310800000, 978469200000\n];\n\nconst actors = [\n  `Morgan Freeman`, `Leonardo di Caprio`, `Al Pacino`, `Tilda Suinton`,\n  `Brad Pitt`, `River Phoenix`, `Tim Robbins`, `Kevin Spacey`,\n  `Edward Norton`, `Keanu Reeves`, `Benicio del Toro`, `Tadanobu Asano`\n];\n\nconst descriptions = [\n  `Lorem ipsum dolor sit amet, consectetur adipiscing elit.`,\n  `Cras aliquet varius magna, non porta ligula feugiat eget.`,\n  `Fusce tristique felis at fermentum pharetra.`,\n  `Aliquam id orci ut lectus varius viverra.`,\n  `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n  `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.`,\n  `Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n  `Sed sed nisi sed augue convallis suscipit in sed felis.`, `Aliquam erat volutpat.`,\n  `Nunc fermentum tortor ac porta dapibus.`, `In rutrum ac purus sit amet tempus`\n];\n\n// array\nconst durations = [\n  120, 60, 80, 140\n];\n\n// map\nconst episodes = [\n  {}\n];\n\n// set\nconst genres = [\n  `horror`, `comedy`, `melodramatic`, `fiction`, `documental`\n];\n\n// set\nconst images = [\n  `accused.jpg`, `blackmail.jpg`, `blue-blazes.jpg`,\n  `fuga-da-new-york.jpg`, `moonrise.jpg`, `three-friends.jpg`\n];\n\n// set\nconst audiences = [\n  `G`, `PG`, `PG-13`, `R`, `NC-17`\n];\n\nconst premiereTimestamps = [\n  1483390800000, -157604400000, 505083600000, 915310800000, 978469200000\n];\n// array\n\nconst digitalReleaseTimestamps = [\n  189464400000, 568155600000, 883774800000, 978469200000\n];\n\n// array\nconst ratings = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9\n];\n\n\n// set\nconst countries = [\n  `Russia`, `Lithuania`, `US`, `Canada`,\n  `India`, `New Zealand`, `Australia`\n];\n\nconst comments = [\n  `This was awesome`, `Poor acting`,\n  `This was like having a bunch salty french fries on Saturday morning`,\n  `I doubt that acting could ever bring him an Oscar`,\n  `Fantastic screenplay`,\n  `Twisted plot with naive ending`\n];\n\nexport const Comments = {\n  [`sleeping`]: `😴`,\n  [`neutral-face`]: `😐`,\n  [`grinning`]: `😀`\n};\n\nexport const card = {\n  titles,\n  originalTitle: ``,\n  releaseTimestamps,\n  actors,\n  descriptions,\n  durations,\n  episodes,\n  genres,\n  images,\n  comments,\n  comment: ``,\n  audiences,\n  premiereTimestamps,\n  digitalReleaseTimestamps,\n  ratings,\n  rating: ``,\n  countries,\n  isFavorite: true,\n  isWatched: false,\n  willWatch: true\n};\n\n\n\n\nexport const filters = [\n  {\n    name: `All movies`,\n    amount: null,\n    state: `active`,\n  },\n\n  {\n    name: `watchlist`,\n    amount: 13,\n    state: false\n  },\n\n  {\n    name: `history`,\n    amount: 4,\n    state: false\n  },\n\n  {\n    name: `favorites`,\n    amount: 8,\n    state: false\n  },\n\n  {\n    name: `stats`,\n    amount: null,\n    state: `additional`\n  },\n];\n","import initApp from './modules/app-init';\n\ninitApp();\n\n\n","import bridgeCard from './card/card-bridge';\n\nexport default () => {\n  bridgeCard();\n};\n","import {card, filters} from '../../data';\n\nimport CardContainer from './container/container-concreter';\nimport PopupContainer from './../popup/container/container-concreter';\n\nimport buildMain from './main/main-builder';\nimport buildFilter from './../filter/filter-builder';\n\nimport buildInfo from './../popup/info/info-builder';\nimport buildComment from './../popup/comment/comment-builder';\nimport buildRating from './../popup/rating/rating-builder.js';\n\nimport {getRandomArrayElement} from '../../assets/handler';\nimport {manufacture} from \"../../assets/factory\";\n\nconst body = document.querySelector(`body`);\nconst cardsContainer = body.querySelector(\n    `.films-list__container--main`);\n\nconst filtersContainer = body.querySelector(\n    `.main-navigation`);\n\nexport default () => {\n  buildFilter(filters, filtersContainer);\n\n  filtersContainer.addEventListener(`click`, (e) => {\n    const {target} = e;\n\n    if (target.tagName.toUpperCase() === `A`) {\n      let main;\n      let producedPopupBuilders = [];\n\n      const {comments, titles, images} = card;\n\n      const src = getRandomArrayElement(images);\n      const title = getRandomArrayElement(titles);\n\n      const cardContainer = new CardContainer(comments);\n      const popupContainer = new PopupContainer(src, title);\n\n      const formSubmission = (evt) => {\n        evt.preventDefault();\n\n        if (evt.ctrlKey === true && evt.keyCode === 13) {\n\n          popupContainer.onSubmit = (newData) => {\n            card.comment = newData.comment;\n            card.rating = newData.rating;\n          }\n        }\n      };\n\n      const popupBuilders = [\n        buildInfo, buildComment, buildRating\n      ];\n\n      cardsContainer.appendChild(cardContainer.render());\n\n      main = buildMain(card, cardContainer.element);\n\n      cardContainer.onComments = () => {\n        popupContainer.render();\n\n        producedPopupBuilders = manufacture(\n          card, popupContainer.element, ...popupBuilders);\n\n        body.appendChild(popupContainer.element);\n        body.addEventListener('keydown', formSubmission);\n        cardContainer.unbind();\n      };\n\n      popupContainer.onClose = () => {\n        cardContainer.bind();\n\n        body.removeEventListener('keydown', formSubmission);\n        body.removeChild(popupContainer.element);\n        popupContainer.unrender();\n      };\n    }\n  });\n};\n","import Component from '../../../assets/concreter';\n\nexport default class Container extends Component {\n  constructor(comments) {\n    super();\n    this._comments = comments;\n    this._onComments = null;\n\n    this._onCommentsButtonClick = this._onCommentsButtonClick.bind(this);\n\n  }\n\n  _onCommentsButtonClick(e) {\n    e.preventDefault();\n\n    if (typeof this._onComments === `function`) {\n      this._onComments();\n    }\n  }\n\n  set onComments(fn) {\n    this._onComments = fn;\n  }\n\n\n  get template() {\n    return `<article class=\"film-card film-card\">\n\n          <button class=\"film-card__comments\">${this._comments.length} comments</button>\n          <form class=\"film-card__controls\">\n            <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist\"><!--Add to watchlist--> WL</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched\"><!--Mark as watched-->WTCHD</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--favorite\"><!--Mark as favorite-->FAV</button>\n          </form>\n          </article>`;\n  }\n\n  bind() {\n    this._element.querySelector(`.film-card__comments`)\n      .addEventListener(`click`, this._onCommentsButtonClick);\n\n  }\n\n  unbind() {\n    this._element.querySelector(`.film-card__comments`)\n      .removeEventListener(`click`, this._onCommentsButtonClick);\n  }\n\n  update(data) {\n    this._comments = data.comments;\n  }\n}\n","import Main from './main-concreter';\nimport {\n  getImagePath,\n  getRandomArrayElement,\n  generateRandomText,\n  getAverageRating,\n  getYear, getHoursMinutes\n} from '../../../assets/handler';\n\nexport default (card, container) => {\n  const {\n    titles, ratings, releaseTimestamps,\n    durations, genres, images, descriptions\n  } = card;\n\n\n  const title = getRandomArrayElement(titles);\n  const releaseYear = getYear(getRandomArrayElement(releaseTimestamps));\n  const duration = getHoursMinutes(getRandomArrayElement(durations));\n  const genre = getRandomArrayElement(genres);\n  const src = getImagePath(getRandomArrayElement(images));\n  const description = generateRandomText(descriptions, ``);\n\n  const main = new Main({\n    title, ratings, releaseYear,\n    duration, genre, src, description});\n\n  container.appendChild(main.render());\n\n  return main;\n};\n","import Component from '../../../assets/concreter';\nimport {getAverageRating} from '../../../assets/handler';\n\nexport default class Main extends Component {\n  constructor(data) {\n    super();\n\n    this._title = data.title;\n    this._ratings = data.ratings;\n    this._releaseYear = data.releaseYear;\n    this._duration = data.duration;\n    this._genre = data.genre;\n    this._src = data.src;\n    this._description = data.description;\n  }\n\n  get template() {\n    return `\n      <h3 class=\"film-card__title\">${this._title}</h3>\n      <p class=\"film-card__rating\">${getAverageRating(this._ratings)}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${this._releaseYear}</span>\n        <span class=\"film-card__duration\">${this._duration}</span>\n        <span class=\"film-card__genre\">${this._genre}</span>\n      </p>\n      <img src=\"${this._src}\" alt=\"\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${this._description}</p>`\n\n  }\n\n  update() {\n\n\n  }\n}\n","import concreteFilter from './../../modules/filter/filter-concreter';\n\nexport default (filters, container) => {\n  for (const it of filters) {\n    container.insertAdjacentHTML(`beforeend`, concreteFilter(\n        {caption: it.name, amount: it.amount, state: it.state}));\n  }\n};\n","export default (filterParams) => {\n  const caption = filterParams.caption;\n  const captionToLowerCase = caption.toLowerCase();\n  const captionFirstLetterToUpperCase =\n    caption.charAt(0).toUpperCase() + caption.slice(1);\n\n  const amount = filterParams.amount;\n  const state = filterParams.state;\n\n  return `\n<a href=\"#${captionToLowerCase}\" \nclass=\"main-navigation__item main-navigation__item${state ? `&#45;&#45;${state}` : ``}\">\n${captionFirstLetterToUpperCase} ${amount ? `<span class=\"main-navigation__item-count\">${amount}</span>` : ``}\n</a>`;\n\n};\n","import Comment from './comment-concreter';\n\nexport default (card, container) => {\n  const {comments} = card;\n  const commentContainer = container.querySelector(\n      `.film-details__comments-wrap`);\n\n  const comment = new Comment(comments);\n\n  commentContainer.appendChild(comment.render());\n  return comment;\n};\n","import Component from '../../../assets/concreter';\nimport {Comments} from '../../../data';\n\nexport default class Comment extends Component {\n  constructor() {\n    super();\n  }\n\n  _getComments() {\n    const array = [];\n\n    for (const [key, value] of Object.entries(Comments)) {\n      array.push(`\n        <input \n          class=\"film-details__emoji-item visually-hidden\" \n          name=\"comment-emoji\" \n          type=\"radio\" \n          id=\"emoji-${key}\" \n          value=\"${key}\"\n          >\n        <label class=\"film-details__emoji-label\" for=\"emoji-${key}\">${value}</label>`)\n    }\n\n    return array;\n  }\n\n  get template() {\n    return `\n      <div>\n        <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">1</span></h3>\n        \n        <ul class=\"film-details__comments-list\">\n          <li class=\"film-details__comment\">\n            <span class=\"film-details__comment-emoji\">😴</span>\n            <div>\n              <p class=\"film-details__comment-text\">So long-long story, boring!</p>\n              <p class=\"film-details__comment-info\">\n                <span class=\"film-details__comment-author\">Tim Macoveev</span>\n                <span class=\"film-details__comment-day\">3 days ago</span>\n              </p>\n            </div>\n          </li>\n        </ul>\n        \n        <div class=\"film-details__new-comment\">\n          <div>\n            <label for=\"add-emoji\" class=\"film-details__add-emoji-label\">😐</label>\n            <input type=\"checkbox\" class=\"film-details__add-emoji visually-hidden\" id=\"add-emoji\">\n  \n            <div class=\"film-details__emoji-list\">${this._getComments().join(``)}</div>\n          </div>\n          <label class=\"film-details__comment-label\">\n            <textarea \n              class=\"film-details__comment-input\" \n              placeholder=\"← Select reaction, add comment here\" \n              name=\"comment\">\n            </textarea>\n          </label>\n        </div>\n      </div>`;\n  }\n\n  bind() {\n    // Bind Ctrl + Enter\n  }\n}\n","import Component from '../../../assets/concreter';\n\nexport default class Container extends Component {\n  constructor(src, title) {\n    super();\n\n    this._src = src;\n    this._title = title;\n\n    this._onClose = null;\n    this._onSubmit = null;\n\n    this._onCloseButtonClick = this._onCloseButtonClick.bind(this);\n\n  }\n\n  _processForm(formData) {\n    const entry = {\n      rating: null,\n      comments: {\n        [`sleeping`]: ``,\n        [`neutral-face`]: ``,\n        [`grinning`]: ``\n      }\n    };\n\n    const ContainerMapper = Container.createMapper(entry);\n\n    for (const pair of formData.entries()) {\n\n      const [property, value] = pair;\n      if (ContainerMapper[property]) {\n\n        ContainerMapper[property](value);\n      }\n    }\n\n    return entry;\n  }\n\n  _onCloseButtonClick(e) {\n    e.preventDefault();\n\n    if (typeof this._onClose === `function`) {\n      this._onClose();\n    }\n  }\n\n  _onSubmitAction() {\n\n    const formData = new FormData(\n      this._element.querySelector(`.film-details__inner`));\n\n    const newData = this._processForm(formData);\n\n    if (typeof this._onSubmit === `function`) {\n      this._onSubmit(newData);\n    }\n  }\n\n  set onClose(fn) {\n    this._onClose = fn;\n  }\n\n  set onSubmit(fn) {\n    this._onSubmit = fn;\n    this._onSubmitAction();\n  }\n\n  get template() {\n    return `\n      <section class=\"film-details\">\n        <form class=\"film-details__inner\" action=\"\" method=\"get\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n          \n          <!-- Info Builder -->\n\n          </div>\n      \n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\">\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n      \n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" checked>\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n      \n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\">\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n      \n          <section class=\"film-details__comments-wrap\">\n\n          <!-- Comment Builder -->\n          \n          </section>\n      \n          <section class=\"film-details__user-rating-wrap\">\n            <div class=\"film-details__user-rating-controls\">\n              <span class=\"film-details__watched-status film-details__watched-status--active\">Already watched</span>\n              <button class=\"film-details__watched-reset\" type=\"button\">undo</button>\n            </div>\n      \n            <div class=\"film-details__user-score\">\n            \n              <div class=\"film-details__user-rating-poster\">\n                <img src=\"${this._src}\" alt=\"film-poster\" class=\"film-details__user-rating-img\">\n              </div>\n              \n              <section class=\"film-details__user-rating-inner\">\n                <h3 class=\"film-details__user-rating-title\">${this._title}</h3>\n      \n                <p class=\"film-details__user-rating-feelings\">How you feel it?</p>\n      \n                <div class=\"film-details__user-rating-score\">\n\n                <!-- Rating Builder -->\n           \n                </div>\n              </section>\n            </div>\n                \n          </section>\n        </form>\n      </section>`;\n  }\n\n  bind() {\n    this._element.querySelector(`.film-details__close-btn`)\n      .addEventListener(`click`, this._onCloseButtonClick);\n  }\n\n  unbind() {\n    this._element.querySelector(`.film-details__close-btn`)\n      .removeEventListener(`click`, this._onCloseButtonClick);\n  }\n\n  static createMapper(target) {\n    return {\n      [`comment-emoji`]: (value) => target.comment = value,\n      score: (value) => target.score = value\n    }\n  }\n}\n","import Info from './info-concreter';\nimport {\n  generateRandomText,\n  getAverageRating,\n  getRandomArrayElement} from '../../../assets/handler';\n\nexport default (card, container) => {\n  const {\n    audiences, titles, ratings,\n    actors, descriptions\n  } = card;\n\n  const infoContainer = container.querySelector(`.film-details__info-wrap`);\n\n  const audience = getRandomArrayElement(audiences);\n  const title = getRandomArrayElement(titles);\n  const averageRating = getAverageRating(ratings);\n  const randomActors = generateRandomText(actors, ` `);\n  const description = generateRandomText(descriptions);\n\n  const info = new Info(audience, title, averageRating, randomActors, description);\n  infoContainer.appendChild(info.render());\n\n  return info;\n}\n","import Component from '../../../assets/concreter';\n\nexport default class Info extends Component {\n  constructor(audience, title, averageRating, actors, description) {\n    super();\n    this.audience = audience;\n    this.title = title;\n    this.averageRating = averageRating;\n    this.actors = actors;\n    this.description = description;\n  }\n\n  get template() {\n    return `<div>\n              <div class=\"film-details__poster\">\n                <img class=\"film-details__poster-img\" src=\"images/posters/blackmail.jpg\" alt=\"incredables-2\">\n        \n                <p class=\"film-details__age\">${this.audience}</p>\n              </div>\n      \n              <div class=\"film-details__info\">\n                <div class=\"film-details__info-head\">\n                  <div class=\"film-details__title-wrap\">\n                    <h3 class=\"film-details__title\">${this.title}</h3>\n                    <p class=\"film-details__title-original\">Original: Невероятная семейка</p>\n                  </div>\n        \n                  <div class=\"film-details__rating\">\n                    <p class=\"film-details__total-rating\">${this.averageRating}</p>\n                    <p class=\"film-details__user-rating\">Your rate 8</p>\n                  </div>\n                </div>\n        \n                <table class=\"film-details__table\">\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Director</td>\n                    <td class=\"film-details__cell\">Brad Bird</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Writers</td>\n                    <td class=\"film-details__cell\">Brad Bird</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Actors</td>\n                    <td class=\"film-details__cell\">${this.actors}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Release Date</td>\n                    <td class=\"film-details__cell\">15 June 2018 (USA)</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Runtime</td>\n                    <td class=\"film-details__cell\">118 min</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Country</td>\n                    <td class=\"film-details__cell\">USA</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Genres</td>\n                    <td class=\"film-details__cell\">\n                      <span class=\"film-details__genre\">Animation</span>\n                      <span class=\"film-details__genre\">Action</span>\n                      <span class=\"film-details__genre\">Adventure</span></td>\n                  </tr>\n                </table>\n        \n                <p class=\"film-details__film-description\">${this.description}</p>\n              </div>\n            </div>`;\n  }\n}\n","import Rating from './rating-concreter';\n\nexport default (card, container) => {\n  const {ratings} = card;\n\n  const ratingContainer = container.querySelector(`\n      .film-details__user-rating-score`);\n\n  const rating = new Rating(ratings);\n  ratingContainer.appendChild(rating.render());\n\n  return rating;\n};\n\n","import Component from '../../../assets/concreter';\n\nexport default class Rating extends Component {\n  constructor(ratings) {\n    super();\n\n    this._ratings = ratings\n  }\n\n  _getRatings() {\n    return this._ratings.map((it) => `\n      <input type=\"radio\" name=\"score\" class=\"film-details__user-rating-input visually-hidden\" value=\"${it}\" id=\"rating-${it}\">\n      <label class=\"film-details__user-rating-label\" for=\"rating-${it}\">${it}</label>`)\n  }\n\n  get template() {\n    return `<div>${this._getRatings().join(``)}</div>`\n  }\n}\n"],"sourceRoot":""}